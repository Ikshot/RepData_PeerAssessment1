plot(x,y)
exp(2)
func_base<-function(x)
return(exp(1)^(exp(1)^x-1)-1)
y=func_base(x)
plot(x,y)
exp(2)
exp(1)^2
atan(1/2)
17/24
1/24
11/24
1/31
7/24
19/24
b=c(11/24-1/31,11/24+1/31)
b
atan(1/2)
126/180
atan(1/4)
53/192
41/192
1/213
55/192
57/192
49/192
a=c(53,41,55,57,49)
a1=a/192
a1
atan(1/4)
b=abs(a1-atan(1/4))
b
min(b)
1/3*(log(13)-1)
3*log(13)
log(13)/3
1/6*pi+1/4*sqrt(3)
1/12*pi+1/4*sqrt(3)
1/6*pi+1/8*sqrt(3)
1/12*pi+1/8*sqrt(3)
357-108-180
459-108-180
x=c(1000,1000,1000,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
mean(x)
median(x)
x=c(1000,1000,1000,300,200,100,50,40,30,20,10,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
mean(x)
median(x)
hist(x)
hist(x,breaks=10)
hist(x,breaks=100)
?log
log(12)-log(6)
log(4)
log(2)
install.packages("psych")
(7^6/6-6*7^5/5)-(5^6/6-6*5^5/5)
2-pi/3
2-pi/2
3-pi/2
sin(3*pi/2)
cos(3*pi/2)
sqrt(2)
sqrt(3)
abs(-2)
sample11<-function(x)
{
return(abs(x^2-x-6))
}
x=seq(-3,3,by=0.1)
plot(x,sample11(x),type="b")
x=seq(-6,6,by=0.1)
plot(x,sample11(x),type="b")
plot(x,sample11(x),type="l")
?plot
plot(x,sample11(x),type="l",xaxp=c(-6,6,24))
s1<-function(h)
return(2*pi*250*(1/h)+2*pi*50*(1/sqrt(h))*h)
h=seq(0,100,by=1)
plot(h,s1)
plot(h,s1(h))
min(s1(h))
s1(h)
h=seq(1,100,by=1)
min(s1(h))
?which
which(s1==1016.641)
which(s1(h)==1016.641)
which(s1(h)=1016.641)
which(s1(h)=-1016.641)
which(LETTERS == "R")
res=s1(h)
which(res==min(s1(h)))
h[5]
1/(10*2^(9/10))*16
1/(10*2^(9/10))
which(LETTERS == "R")
4/5*2^(1/10)
f1<-function(x)
return(x^2-2*x+2)
f2<-function(x)
return(x+2)
x-seq(-1,4,by=0.2)
x=seq(-1,4,by=0.2)
plot(x,f1(x),col=1)
plot(x,f1(x),col=1,type="l")
plot(x,f1(x),col=2,type="l")
lines(x,f2(x),col=2,type="l")
184+84+96+10+10+10+11+10+9+10+10+12+11+13
cos(pi)
install.packages(c("car", "prodlim", "reshape", "reshape2", "scales"))
install.packages("filehash")
install.packages("gbm")
install.packages("knitr")
install.packages("caret")
install.packages("pamr")
install.packages("lubridate")
install.packages("rpart")
copyright
install.packages("KernSmooth")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.0.2/library")
detach("package:KernSmooth", unload=TRUE)
install.packages("devtools")
library("devtools", lib.loc="C:/Users/Ikshot/Documents/R/win-library/3.1")
find_rtools()
? ggplot
install.packages("ggplot2")
library("ggplot2", lib.loc="C:/Users/Ikshot/Documents/R/win-library/3.1")
xvar <-  c(rnorm (1000, 20, 5))
dnt <- density(xvar, main="Kernel Density of xvar")
plot(dnt, col = "red")
hist(xvar,breaks=10)
hist(xvar,breaks=5)
hist(xvar,breaks=5)
hist(xvar,breaks=5)
hist(xvar,breaks=15)
hist(xvar,breaks=20)
hist(xvar,breaks=20)
hist(xvar,breaks=25)
hist(xvar,breaks=30)
hist(xvar,breaks=30)
hist(xvar,breaks=40)
hist(xvar,breaks=50)
hist(xvar,breaks=5)
hist(xvar,breaks=100)
xvar <-  c(rnorm (50, 20, 5))
hist(xvar)
hist(xvar,breaks=10)
hist(xvar,breaks=5)
hist(xvar,breaks=3)
hist(xvar,breaks=10)
dnt <- density(xvar, main="Kernel Density of xvar")
lines(dnt)
plot(dnt)
hist(xvar,breaks=10)
par(mfrow=c(2,1))
plot(dnt)
hist(xvar,breaks=10)
install.packages("knitr")
library("knitr", lib.loc="C:/Users/Ikshot/Documents/R/win-library/3.1")
xvar <-  c(rnorm (50, 20, 5))
yvar <-  c(rnorm (50, 40, 10))
cor(xvar,yvar)
zvar=yvar+xvar
cor(xvar,zvar)
zvar=yvar*xvar
cor(xvar,zvar)
yvar <-  c(rnorm (50, 40, 10))
xvar <-  c(rnorm (50, 40, 10))
cor(xvar,yvar)
zvar=yvar+xvar
cor(xvar,zvar)
zvar=yvar*xvar
cor(xvar,zvar)
?load.csv()
?read.csv()
setwd
setwd("C:\Work\RepData_PeerAssessment1")
setwd("C:/Work/RepData_PeerAssessment1")
data <- read.csv(unz("activity.zip", "activity.zip"), header=T, sep=",")
data <- read.csv(unz("activity.zip", "activity.csv"), header=T, sep=",")
View(data)
type
xlass
class
class(data)
class(data[1])
class(data[,1])
class(data[,2])
class(data[,3])
as.date
as
?as
d1=as(data$date,"date")
date
?date
data(1,3)
data[1,3]
data[1,2]
data[1,2].name
data[1,2].label
?strptime
strptime(date$date)
date$date
strptime(data$date)
strptime(data$date,format="%Y-%m-%d")
data$date=strptime(data$date,format="%Y-%m-%d")
class(data$date)
summary(data)
table(data$date)
table(data)
table(data[,"date"])
View(data)
data$date
class(data$date)
class(class(data$date))
(class(data$date))[1]
(class(data$date))[2]
?class
data$date
View(data)
data <- read.csv(unz("activity.zip", "activity.csv"), header=T, sep=",")
data$date_POSIXlt=strptime(data$date,format="%Y-%m-%d",tz="GMT")
View(data)
table(data$date_POSIXlt)
table(data$date)
table(data$date)[1]
table(data$date)[1][1]
table(data$date)[1][1][1]
?table
names(data$date)
View(data)
table(data$date)[,1]
levels(data$date)
data.frame
data.frame()
?data.frame
steps_sums=data.frame(date=levels(data$date),sumsteps=0)
View(steps_sums)
steps_sums[1,1]
?for
()
for (oneDay in steps_sums$date) {
print oneDay
}
for (oneDay in steps_sums$date) { print oneDay }
for (oneDay in steps_sums$date) print oneDay
for (oneDay in steps_sums$date)print oneDay
for (oneDay in steps_sums$date)
print oneDay
steps_sums$date
for(oneDay in steps_sums$date)
print oneDay
print(oneDay)
for(oneDay in steps_sums$date)
print(oneDay)
for(drow in data)
steps_sums$sumsteps[steps_sums$date=drow$date]+=drow$steps
for(drow in data)
steps_sums[steps_sums$date==drow$date,sumsteps]+=drow$steps
for(drow in data)
steps_sums[steps_sums$date==drow$date,sumsteps]=steps_sums[steps_sums$date==drow$date,sumsteps]+drow$steps
for(drow in data)
steps_sums[steps_sums$date==drow$date,steps_sums$sumsteps]=steps_sums[steps_sums$date==drow$date,steps_sums$sumsteps]+drow$steps
for(drow in data)
print(drow)
for(drow in data)
print(drow[1])
?sum
unique
unique(data$date)
?lapply
x[0]=1
?lenght
?len
?size
?length
length(unique(data$date))
?rep
sum_steps=rep.int(0,length(unique(data$date)))
steps_by_day=rep.int(0,length(diff_dates))
diff_dates=unique(data$date)
diff_dates[1]
day_data_set=data[,data$date=diff_dates[1]]
day_data_set=data[,data$date==diff_dates[1]]
day_data_set=data[data$date==diff_dates[1],1]
day_data_set=data[data$date==diff_dates[2],1]
day_data_set=data[data$date==diff_dates[3],1]
day_data_set=data[data$date==diff_dates[4],1]
day_data_set=data[data$date==diff_dates[4],"steps"]
day_data_set=data[data$date==diff_dates[4],steps]
day_data_set=data[data$date==diff_dates[4],data$steps]
diff_dates=unique(data$date)
steps_by_day=rep.int(0,length(diff_dates))
for(i in [1:length(diff_dates)])
steps_by_day[i]=sum(data[data$date==diff_dates[1],"steps"],na.rm)
diff_dates=unique(data$date)
steps_by_day=rep.int(0,length(diff_dates))
for(i in 1:length(diff_dates))
steps_by_day[i]=sum(data[data$date==diff_dates[1],"steps"],na.rm=TRUE)
steps_by_day
length(diff_dates)
for(i in 1:length(diff_dates))
print(data[data$date==diff_dates[1],"steps"])
diff_dates=unique(data$date)
steps_by_day=rep.int(0,length(diff_dates))
for(i in 1:length(diff_dates))
steps_by_day[i]=sum(data[data$date==diff_dates[i],"steps"],na.rm=TRUE)
diff_dates
diff_dates=unique(data$date)
steps_by_day=rep.int(0,length(diff_dates))
for(i in 1:length(diff_dates))
steps_by_day[i]=sum(data["date"==diff_dates[i],"steps"],na.rm=TRUE)
diff_dates=unique(data$date)
steps_by_day=rep.int(0,length(diff_dates))
for(i in 1:length(diff_dates))
steps_by_day[i]=sum(data[data$date==diff_dates[i],"steps"],na.rm=TRUE)
hist(diff_dates,steps_by_day,col=2)
iter=1:length(diff_dates)
iter
diff_dates=unique(data$date)
steps_by_day=rep.int(0,length(diff_dates))
iter=1:length(diff_dates)
for(i in iter)
steps_by_day[i]=sum(data[data$date==diff_dates[i],"steps"],na.rm=TRUE)
hist(iter,steps_by_day,col=2)
steps_by_day
iter
diff_dates=unique(data$date)
steps_by_day=rep.int(0,length(diff_dates))
iter=1:length(diff_dates)
for(i in iter)
steps_by_day[i]=sum(data[data$date==diff_dates[i],"steps"],na.rm=TRUE)
hist(steps_by_day,col=2)
boxplot(iter,steps_by_day)
?plot
bar
?barplot
barplot(steps_by_day)
barplot(diff_dates,steps_by_day)
par(mfrow=c(1,1))
barplot(steps_by_day)
barplot(steps_by_day,names.arg=diff_dates)
View(data)
?format
format(median(steps_by_day))
median(steps_by_day)
unique(data$intervals)
unique(data$interval)
intervals=unique(data$interval)
interval_steps_over_days=rep.int(0,length(intervals))
interval_iter=1:length(intervals)
for(i in interval_iter)
interval_steps_over_days[i]=mean(data[data$interval==intervals[i],"steps"],na.rm=TRUE)
plot(intervals, interval_steps_over_days, type="l", col="darkblue")
?rep
intervals=unique(data$interval)
interval_steps_over_days=rep(0,length(intervals))
interval_iter=1:length(intervals)
for(i in interval_iter)
interval_steps_over_days[i]=mean(data[data$interval==intervals[i],"steps"],na.rm=TRUE)
plot(intervals, interval_steps_over_days, type="l", col="darkblue")
interval_steps_over_days
?which
max(interval_steps_over_days)
which(interval_steps_over_days==max(interval_steps_over_days)
hj
which(interval_steps_over_days==max(interval_steps_over_days))
sum(is.na(loansData))
sum(is.na(data))
sum(is.na(data$interval))
?is.na
sum(is.na(data$steps))
var(interval_steps_over_days)
which(is.na(data2$steps))
data2=data
which(is.na(data2$steps))
?Abline
?abline
data2$date_POSIXlt=strptime(data2$date,format="%Y-%m-%d",tz="GMT")
weekdays()
weekdays(data2$date_POSIXlt)
?weekdays
View(data2)
data2$date_POSIXlt
data2$date_POSIXlt.wday
data2$date_POSIXlt[1].wday
data2$date_POSIXlt[1].wday()
a=data2[1,"date_POSIXlt"]
a
a.wday
a$wday
a=data2[3,"date_POSIXlt"]
a$wday
a=data2[1000,"date_POSIXlt"]
a$wday
data2$date_POSIXlt[1]$wday
data2$date_POSIXlt$wday
x=c(1,2,3)
x
zf=as.factor(x)
zf
DayOrEnd<-function(wday)
{
if(wday in c(0,6))
return("weekend")
else
return("weeday")
}
DayOrEnd<-function(wday)
{
if(wday in c(0,6))
DayOrEnd<-function(wday)
{
if(wday == 0 && wday ==6))
return("weekend")
else
return("weeday")
}
DayOrEnd<-function(wday)
{
if(wday == 0 && wday ==6)
return("weekend")
else
return("weeday")
}
data2$de=DayOrEnd(data2$date_POSIXlt$wday)
View(data2)
data2$de=as.factor(data2$de)
data2$de
DayOrEnd<-function(wday)
{
if(wday == 0 || wday ==6)
return("weekend")
else
return("weekday")
}
data2$de=DayOrEnd(data2$date_POSIXlt$wday)
data2$de=as.factor(data2$de)
data2$de
summary(date2$wd)
summary(data2$wd)
data2$de=DayOrEnd(data2$date_POSIXlt$wday)
table(data2%de)
table(data2$de)
table(data2$date_POSIXlt$wday)
DayOrEnd<-function(wday)
{
if(wday=0 || wday=6)
return("weekend")
else
return("weekday")
}
data2$de=DayOrEnd(data2$date_POSIXlt$wday)
DayOrEnd<-function(wday)
{
if(wday==0 | wday==6)
return("weekend")
else
return("weekday")
}
data2$de=DayOrEnd(data2$date_POSIXlt$wday)
DayOrEnd<-function(wday)
{
if(wday in c(0,6))
return("weekend")
else
return("weekday")
}
DayOrEnd<-function(wday)
{
# Sunday
if(wday==0)
return("weekend")
# Saturday
if(wday==6)
return("weekend")
return("weekday")
}
data2$de=DayOrEnd(data2$date_POSIXlt$wday)
data2$date_POSIXlt$wday
DayOrEnd<-function(wday)
{
arg_size=length(wday)
res=rep("",arg_size)
for(i in 1:arg_size)
# Sunday or Saturday
if(wday[i]==0 || wday[i]==6)
res[i]="weekend"
else
res[i]="weekday"
return(res)
}
data2$de=DayOrEnd(data2$date_POSIXlt$wday)
table(data2$de)
data2$de=as.factor(data2$de)
table(data2$de)
data2$de
?plot
?par
par(yaxp=c(0,250,5))
x=rmorm(200,0,5)
x=rnorm(200,0,5)
plot(x)
plot(x,xaxp=c(-20,20,10))
plot(x,yaxp=c(-20,20,10))
plot(x,yaxp=c(-30,20,10))
?ylim
plot(x)
plot(x,ylim=c(0,10))
ymax=max(data$steps)
?max
